### 1、什么是一致性？

关于一致性的联想：`CAP`理论的`consistency`，或者`ACID`中的`consistency`，或者`Cache`一致性协议的`coherence`，再或者是 `Raft/Paxos`中的`consensus`？coherence、consensus、consistency统一翻译为“一致性”。

#### coherence

Coherence 只出现在Cache Coherence 一词中，称为”缓存一致性”，研究多核场景，即怎么保证多个核上的CPU 缓存数据是一致的，一般是单机维度的，不算分布式领域，可以参考[这篇文章](https://www.infoq.cn/article/cache-coherency-primer/)

#### consensus

consensus准确的翻译是共识，即多个提议者达成共识的过程，例如Paxos，Raft 就是共识算法，***paxos 是一种共识理论，分布式系统是他的场景，一致性是他的目标***。

一些常见的误解：使用了 Raft或者 paxos 的系统都是线性一致的（Linearizability 即强一致），其实不然，共识算法只能提供基础，要实现线性一致还需要在算法之上做出更多的努力。

因为分布式系统引入了多个节点，节点规模越大，宕机、网络时延、网络分区就会成为常态，任何一个问题都可能导致节点之间的数据不一致，因此Paxos 和 Raft 准确来讲是用来解决一致性问题的共识算法，用于分布式场景，而非”缓存一致性“这种单机场景。所以很多文章也就简称”Paxos是分布式系统中的一致性算法“，

*一致性（Consistency）的含义比共识（consensus）要宽泛，一致性指的是多个副本对外呈现的状态。包括顺序一致性、线性一致性、最终一致性等。而**共识特指达成一致的过程**，但注意，共识并不意味着实现了一致性，一些情况下他是做不到的。*

#### consistency

> 一致性要求的是一致，并不是正确，如果所有节点一致给出一个”错误“的答案，那也叫一致性

线性一致性：



顺序一致性：



因果一致性：



最终一致性：